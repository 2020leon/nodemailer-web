<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Abouts on Nodemailer</title>
    <link>https://nodemailer.com/about/index.xml</link>
    <description>Recent content in Abouts on Nodemailer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Jan 2017 21:25:35 +0200</lastBuildDate>
    <atom:link href="https://nodemailer.com/about/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Nodemailer</title>
      <link>https://nodemailer.com/about/</link>
      <pubDate>Fri, 20 Jan 2017 21:25:35 +0200</pubDate>
      
      <guid>https://nodemailer.com/about/</guid>
      <description>

&lt;h1 id=&#34;nodemailer&#34;&gt;Nodemailer&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Nodemailer&lt;/strong&gt; is a module for Node.js applications to allow easy as cake email sending. The project got started back in 2010 when there was no sane option to send email messages, today it is the solution most Node.js users turn to by default.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nodemailer&lt;/strong&gt; is licensed under &lt;strong&gt;MIT license&lt;/strong&gt;. See license details in the &lt;a href=&#34;https://nodemailer.com/about/license/&#34;&gt;License page&lt;/a&gt;. If you are upgrading from Nodemailer v2 or older, then see the light migration guide &lt;a href=&#34;https://nodemailer.com/about/migrate&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install nodemailer --save
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;nodemailer-features&#34;&gt;Nodemailer features&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A single module with &lt;strong&gt;zero dependencies&lt;/strong&gt; â€“ code is easily auditable, as there are no dark corners&lt;/li&gt;
&lt;li&gt;Heavy focus on &lt;strong&gt;security&lt;/strong&gt;, no-one likes &lt;a href=&#34;http://thehackernews.com/2017/01/phpmailer-swiftmailer-zendmail.html&#34;&gt;RCE vulnerabilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unicode support&lt;/strong&gt; to use any characters, including emoji ðŸ’ª&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows support&lt;/strong&gt; â€“ you can install it with &lt;a href=&#34;https://www.npmjs.com/package/nodemailer&#34;&gt;npm&lt;/a&gt; on Windows just like any other module, there are no compiled dependencies. Use it hassle free from Azure or from your Windows box&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;HTML content&lt;/strong&gt;, as well as &lt;strong&gt;plain text&lt;/strong&gt; alternative&lt;/li&gt;
&lt;li&gt;Add &lt;strong&gt;&lt;a href=&#34;https://nodemailer.com/message/attachments/&#34;&gt;Attachments&lt;/a&gt;&lt;/strong&gt; to messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://nodemailer.com/message/embedded-images/&#34;&gt;Embedded&lt;/a&gt;&lt;/strong&gt; image attachments for HTML content â€“ your design does not get blocked&lt;/li&gt;
&lt;li&gt;Secure email delivery using &lt;strong&gt;TLS/STARTTLS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Different &lt;strong&gt;&lt;a href=&#34;https://nodemailer.com/transports/&#34;&gt;transport methods&lt;/a&gt;&lt;/strong&gt; in addition to the built-in &lt;strong&gt;&lt;a href=&#34;https://nodemailer.com/smtp/&#34;&gt;SMTP support&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Sign messages with &lt;strong&gt;&lt;a href=&#34;https://nodemailer.com/dkim/&#34;&gt;DKIM&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Custom &lt;strong&gt;&lt;a href=&#34;https://nodemailer.com/plugins/&#34;&gt;Plugin support&lt;/a&gt;&lt;/strong&gt; for manipulating messages&lt;/li&gt;
&lt;li&gt;Sane &lt;strong&gt;&lt;a href=&#34;https://nodemailer.com/smtp/oauth2/&#34;&gt;OAuth2&lt;/a&gt;&lt;/strong&gt; authentication&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://nodemailer.com/smtp/proxies/&#34;&gt;Proxies&lt;/a&gt;&lt;/strong&gt; for SMTP connections&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ES6 code&lt;/strong&gt; â€“ no more unintentional memory leaks, due to hoisted &lt;em&gt;var&lt;/em&gt;&amp;rsquo;s&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;requirements&#34;&gt;Requirements&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Node.js v6+&lt;/strong&gt;. That&amp;rsquo;s it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are able to run Node.js version 6 or newer, then you can use Nodemailer. There are no platform or resource specific requirements.&lt;/p&gt;

&lt;h4 id=&#34;tl-dr&#34;&gt;TL;DR&lt;/h4&gt;

&lt;p&gt;In short, what you need to do to send messages, would be the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a Nodemailer transporter using either &lt;a href=&#34;https://nodemailer.com/smtp/&#34;&gt;SMTP&lt;/a&gt; or &lt;a href=&#34;https://nodemailer.com/transports/&#34;&gt;some other&lt;/a&gt; transport mechanism&lt;/li&gt;
&lt;li&gt;Set up &lt;a href=&#34;https://nodemailer.com/message/&#34;&gt;message options&lt;/a&gt; (who sends what to whom)&lt;/li&gt;
&lt;li&gt;Deliver the message object using the &lt;strong&gt;sendMail()&lt;/strong&gt; method of your previously created transporter&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&#34;example&#34;&gt;Example&lt;/h5&gt;

&lt;p&gt;This is a complete example to send an email with plain text and HTML body&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#39;use strict&#39;;
const nodemailer = require(&#39;nodemailer&#39;);

// Generate test SMTP service account from ethereal.email
// Only needed if you don&#39;t have a real mail account for testing
nodemailer.createTestAccount((err, account) =&amp;gt; {

    // create reusable transporter object using the default SMTP transport
    let transporter = nodemailer.createTransport({
        host: &#39;smtp.ethereal.email&#39;,
        port: 587,
        secure: false, // true for 465, false for other ports
        auth: {
            user: account.user, // generated ethereal user
            pass: account.pass  // generated ethereal password
        }
    });

    // setup email data with unicode symbols
    let mailOptions = {
        from: &#39;&amp;quot;Fred Foo ðŸ‘»&amp;quot; &amp;lt;foo@blurdybloop.com&amp;gt;&#39;, // sender address
        to: &#39;bar@blurdybloop.com, baz@blurdybloop.com&#39;, // list of receivers
        subject: &#39;Hello âœ”&#39;, // Subject line
        text: &#39;Hello world?&#39;, // plain text body
        html: &#39;&amp;lt;b&amp;gt;Hello world?&amp;lt;/b&amp;gt;&#39; // html body
    };

    // send mail with defined transport object
    transporter.sendMail(mailOptions, (error, info) =&amp;gt; {
        if (error) {
            return console.log(error);
        }
        console.log(&#39;Message sent: %s&#39;, info.messageId);
        console.log(&#39;Preview URL: %s&#39;, nodemailer.getTestMessageUrl(info));

        // Message sent: &amp;lt;b658f8ca-6296-ccf4-8306-87d57a0b4321@blurdybloop.com&amp;gt;
        // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...
    });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nodemailer AMQP example&lt;/strong&gt; is an example of using RabbitMQ to manage Nodemailer email messages. &lt;a href=&#34;https://github.com/nodemailer/nodemailer-amqp-example&#34;&gt;Source&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Nodemailer is created by &lt;a href=&#34;https://github.com/andris9&#34;&gt;Andris Reinman&lt;/a&gt;. The Nodemailer logo was designed by &lt;a href=&#34;https://www.behance.net/kristjansen&#34;&gt;Sven Kristjansen&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Migration</title>
      <link>https://nodemailer.com/about/migrate/</link>
      <pubDate>Fri, 20 Jan 2017 21:37:15 +0200</pubDate>
      
      <guid>https://nodemailer.com/about/migrate/</guid>
      <description>&lt;p&gt;Nodemailer v3 has dropped some features that were available in Nodemailer v2 and also introduced some new ones.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All &lt;strong&gt;dependencies were dropped&lt;/strong&gt;. There is exactly 0 dependencies needed to use Nodemailer. This brings the installation time of Nodemailer from NPM to less than 2 seconds&lt;/li&gt;
&lt;li&gt;All &lt;strong&gt;templating is gone&lt;/strong&gt;. It was too confusing to use and to be really universal a huge list of different renderers would be required. Nodemailer is about email, not about parsing different template syntaxes&lt;/li&gt;
&lt;li&gt;No &lt;strong&gt;NTLM authentication&lt;/strong&gt;. It was too difficult to re-implement. If you still need it then it would be possible to introduce a pluggable SASL interface where you could load the ntlm module in your own code and pass it to Nodemailer. Currently this is not possible.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OAuth2 authentication&lt;/strong&gt; is built in and has a different &lt;a href=&#34;https://nodemailer.com/smtp/oauth2/&#34;&gt;configuration&lt;/a&gt;. You can use both user (3LO) and service (2LO) accounts to generate access tokens from Nodemailer. Additionally there&amp;rsquo;s a new feature to authenticate differently for every message â€“ useful if your application sends on behalf of different users instead of a single sender.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Delivery status notifications&lt;/strong&gt; added to Nodemailer&lt;/li&gt;
&lt;li&gt;Improved &lt;strong&gt;DKIM&lt;/strong&gt; signing of messages. Previously you needed an external module for this and it did quite a lousy job with larger messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stream transport&lt;/strong&gt; to return a RFC822 formatted message as a stream. Useful if you want to use Nodemailer as a preprocessor and not for actual delivery.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sendmail&lt;/strong&gt; transport built-in, no need for external transport plugin&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Improved Calendaring&lt;/strong&gt;. Provide an ical file to Nodemailer to send out &lt;a href=&#34;https://nodemailer.com/message/calendar-events/&#34;&gt;calendar events&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://nodemailer.com/about/license/</link>
      <pubDate>Fri, 20 Jan 2017 21:37:15 +0200</pubDate>
      
      <guid>https://nodemailer.com/about/license/</guid>
      <description>&lt;p&gt;Nodemailer v4+ is licensed under the &lt;strong&gt;MIT license&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Version 3 of Nodemailer used the &lt;strong&gt;European Union Public License 1.1&lt;/strong&gt; which is a &lt;em&gt;copyleft&lt;/em&gt; license. You can read about the reasoning behind using EUPL for Nodemailer from the &lt;a href=&#34;https://blog.nodemailer.com/2017/02/02/nodemailer-v3-0-0/&#34;&gt;Nodemailer blog&lt;/a&gt;. After a two months long experiment I decided to cancel all active subscriptions of Nodemailer and changed the license back to MIT.&lt;/p&gt;

&lt;p&gt;Keeping a lower level infrastructure module under a restrictive license has turned out to cause more trouble than gains â€“ I myself had to use older versions of Nodemailer for some client work to avoid any licensing conflicts. There weren&amp;rsquo;t too many paying or interested clients either and most users did not seem to care about the license at all, they still used the copyleft licensed Nodemailer in their commercial products and I did not have any means to enforce the license terms.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you really like Nodemailer or your business benefits from it financially then I would really appreciate a small donation. You can either use Bitcoin or PayPal for donations. I can also write a consulting invoice (I have a EU VAT number) if you can&amp;rsquo;t do donations.&lt;/p&gt;

&lt;a  href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=DB26KWR2BQX5W&#34; target=&#34;_blank&#34;  class=&#34;btn btn-default&#34;&gt;
  
  
  
    
  
  Donate using PayPal
  
  &lt;i class=&#34;fa fa-share&#34;&gt;&lt;/i&gt;
  
&lt;/a&gt;


&lt;p&gt;My Bitcoin wallet is: &lt;code&gt;15Z8ADxhssKUiwP3jbbqJwA21744KMCfTM&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>