<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Other transports on Nodemailer</title>
    <link>https://nodemailer.com/transports/</link>
    <description>Recent content in Other transports on Nodemailer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Jan 2017 17:20:25 +0200</lastBuildDate>
    
	<atom:link href="https://nodemailer.com/transports/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sendmail transport</title>
      <link>https://nodemailer.com/transports/sendmail/</link>
      <pubDate>Fri, 20 Jan 2017 11:35:26 +0200</pubDate>
      
      <guid>https://nodemailer.com/transports/sendmail/</guid>
      <description>Sendmail transport pipes the generated RFC822 message to the standard input of the sendmail command, so it&amp;rsquo;s the same thing what the mail() function in PHP does.
To use Sendmail transport, set sendmail in Nodemailer transport options to true.
The additional options to use with this transport are the following:
 path - path to the sendmail command (defaults to &amp;lsquo;sendmail&amp;rsquo;) newline - either &amp;lsquo;windows&amp;rsquo; or &amp;lsquo;unix&amp;rsquo; (default). Forces all newlines in the output to either use Windows syntax &amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt; or Unix syntax &amp;lt;LF&amp;gt; args - an optional array of command line options to pass to the sendmail command (ie.</description>
    </item>
    
    <item>
      <title>SES transport</title>
      <link>https://nodemailer.com/transports/ses/</link>
      <pubDate>Fri, 20 Jan 2017 12:01:09 +0200</pubDate>
      
      <guid>https://nodemailer.com/transports/ses/</guid>
      <description>Nodemailer SES transport is a wrapper around aws.SES from the aws-sdk package. SES transport is available from Nodemailer v3.1.0.
Why not use aws-sdk directly? The SES API exposes two methods to send mail â€“ SendEmail and SendRawEmail. While the first one is really easy to use and Nodemailer is not actualy needed, then it is also quite basic in features. For example you can&amp;rsquo;t use attachments with SendEmail. On the other hand SendRawEmail requires you build your own MIME formatted email message which is far from being easy.</description>
    </item>
    
    <item>
      <title>Stream transport</title>
      <link>https://nodemailer.com/transports/stream/</link>
      <pubDate>Fri, 20 Jan 2017 12:01:09 +0200</pubDate>
      
      <guid>https://nodemailer.com/transports/stream/</guid>
      <description>Stream Transport is not actually a transport, it&amp;rsquo;s more like a testing add-on as instead of delivering the message it processes input data and returns you the generated RFC822 email message either as a stream or a Buffer. Additionally you can define which kind of newlines to use, either the &amp;lsquo;windows&amp;rsquo; style (&amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;) or the &amp;lsquo;unix&amp;rsquo; style (&amp;lt;LF&amp;gt;). This transport is mostly useful for testing and also for scenarios where you want to use Nodemailer plugins to process the message and do the actual delivery by some other means.</description>
    </item>
    
  </channel>
</rss>